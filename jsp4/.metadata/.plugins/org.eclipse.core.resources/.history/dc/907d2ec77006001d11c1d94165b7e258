<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
    <%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>
<c:set var="path1" value="${pageContext.request.contextPath }" />
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<link href="../css/code.css" media="all" rel="stylesheet" type="text/css" />
<title>서브페이지</title>
</head>
<body>
<div id="scont">
<header id="header" class="header">
	<%@ include file="../inc/header.jsp" %>
</header>
    <div id="container">

    <div id="slnb">
    <h2 class="title">자바(JAVA)</h2>
        <ul>
            <li id=""><a href="" class="M_on">JAVA</a>
                <ul class="mn_depth2">
                    <li><a href="${path1 }/board/list.do">자바의 개요</a></li>	<!-- 다음페이지만들때 여기서 M_ON바꿔줘야함 -->
                    <li><a href="${path1 }/board/list2.do">특징</a></li>
                    <li><a href="${path1 }/board/list3.do">문법</a></li>
                </ul>
            </li>
            <li><a href="${path1 }/board/list4.do" class="M_on">JAVA Script</a></li>
            <li><a href="${path1 }/board/list5.do">JDK</a></li>
        </ul>
    </div>
 
    <div id="contgr">
        <div id="path" class="sub_nav"><a href="${path1 }" class="home" id="path_h"><span class="Hidden">home</span></a>
            <a href="">자바(JAVA)</a>
            <span class="bold last">JAVA Script</span>
        </div> 
            
            <ul class="cont_t_icon">
                <li><a title="주소복사" href="" class="link_icon"><span class="Hidden">주소복사</span></a></li>
                <li><a title="인쇄하기" href="" class="line_none print_icon" ><!-- a title="새창" href="//kostat.go.kr" onclick="window.print(); return false;" class="line_none print_icon" --><span class="Hidden">프린트</span></a></li>        
            </ul>
            <h1 class="h1_tit">JS(JavaScript)</h1>
            
   <h3 class="h3_tit">개요</h3>
   <ul class="list_style01">
	<li><span class="bold">
	document.write("Hello, world!"); // HTML 문서에 출력된다.<br>
	alert("Hello, world!"); // 알림창으로 출력된다.<br>
	console.log("Hello, world!"); // 보통 F12를 누르면 보이는 콘솔 창에 출력된다.</span>
		<p>
		Ecma International의 프로토타입 기반의 프로그래밍 언어로, 스크립트 언어에 해당된다.<br> 
		특수한 목적이 아닌 이상 모든 웹 브라우저에 인터프리터가 내장되어 있다. 오늘날 HTML, CSS와 함께 웹을 구성하는 요소 중 하나다.<br>
		HTML이 웹 페이지의 기본 구조를 담당하고, CSS가 디자인을 담당한다면 JavaScript는 <br>클라이언트 단에서 웹 페이지가 동작하는 것을 담당한다.<br>
		웹 페이지를 자동차에 비유하자면, HTML은 자동차의 뼈대, CSS는 자동차의 외관, JavaScript는 자동차의 동력이라고 볼 수 있다.
		</p><br>
	</li>

	</ul>
	
	   <h3 class="h3_tit">역사</h3>
   <ul class="list_style01">
	<li><span class="bold">개발자 </span>
		<p>
		첫 탄생은 1995년 넷스케이프에서 근무하던 브랜든 아이크가 10일만에 설계한 것으로부터 시작한다.<br> 
		처음에는 Mocha라는 이름이었지만 4달 만에 LiveScript라는 이름으로 개명하고 다시 3달 후에는 <br>
		JavaScript라는 이름이 되어 오늘날까지 이어지고 있다. <br>
		'Java와 구문이 유사해서 이름을 JavaScript로 명명했다'는 표면상의 이유를 대지만 <br>
		그 속은 Java의 유명세를 타서 묻어가려고 의도적으로 그렇게 작명한 것이다. 물론 무단으로 도용한 것은 아니고, <br>
		썬 마이크로시스템즈(지금은 오라클에 인수됨)에게 상표권 사용 허락을 받았다. <br>
		# 오라클이 인수하면서 상표권도 오라클로 넘어갔는데, 소송으로 악명높은 오라클이 JavaScript는 딱히 손대지 않고 있다.<br>
		 애초에 허락을 맡은 것이기도 하고 JavaScript가 워낙 널리 쓰이다보니 이제는 서로 각자의 유명세에 보탬이 되는 상부상조 관계이기 때문.
		</p><br>
	</li>
	<li><span class="bold">비 메인 메서드</span>
		<ul class="list_style02">
			<li>메인 메서드가 들어있는 클래스에 다른 정적 (static) 메서드를 써넣는게 가능하다. 양식은
접근자 static 반환형 이름(자료형 패러미터1, ...) {메서드 바디}
위에 있는 간단한 예제를 정적 메서드를 사용해서 구현해보자.
<pre data-v-6b91d317=""><code class="syntax" data-language="java" data-v-6b91d317=""><span class="syntax-keyword">public</span> <span class="syntax-keyword">class</span> Namu {
  <span class="syntax-keyword">public</span> <span class="syntax-keyword">static</span> <span class="syntax-keyword">void</span> main(String[] args) {
    printNamu();
  }
  <span class="syntax-keyword">public</span> <span class="syntax-keyword">static</span> <span class="syntax-keyword">void</span> printNamu() {
    System.out.println(<span class="syntax-literal">"Namu Wiki"</span>);}
}</code></pre></li><br>
		</ul>
	</li>
	<li><span class="bold">클래스</span>
		<ul class="list_style02">
			<li>당연하게도 커스텀 클래스를 만들수 있다. 예제를 통해 살펴보자.
클래스는 보통 각자 다른 .java 파일에 들어간다. 내부 클래스라는 개념이 있기는 하지만 그리 중요하진 않으므로 이 문단에서는 무시하자.
<br><pre data-v-6b91d317=""><code class="syntax" data-language="java" data-v-6b91d317=""><span class="syntax-comment">// Person.java</span>
<span class="syntax-keyword">public</span> <span class="syntax-keyword">class</span> Person {
  <span class="syntax-keyword">private</span> String name; <span class="syntax-comment">// 사람의 이름. 모든 객체가 각자 name을 얻는다.</span>
  <span class="syntax-keyword">private</span> <span class="syntax-keyword">static</span> String species = <span class="syntax-literal">"Homo sapiens"</span>; <span class="syntax-comment">// 클래스에 하나만 있는 변수. 모든 Person 객체가 이걸 공유.</span>
  
  <span class="syntax-comment">// 생성자 메서드. 객체를 생성할때 new 키워드와 함께 사용된다.</span>
  <span class="syntax-keyword">public</span> Person(String name) {
    <span class="syntax-comment">// 자신의 변수를 참조할때 this를 쓸 수 있다.</span>
    <span class="syntax-keyword">this</span>.name = name;
  }

  <span class="syntax-keyword">public</span> String getName() {
    <span class="syntax-keyword">return</span> name; <span class="syntax-comment">// this.name과 동일</span>
  }
  <span class="syntax-keyword">public</span> <span class="syntax-keyword">static</span> String getSpecies() {
    <span class="syntax-keyword">return</span> species;
  }
}
<span class="syntax-comment">// Main.java</span>
<span class="syntax-keyword">public</span> <span class="syntax-keyword">class</span> Main {
  <span class="syntax-keyword">public</span> <span class="syntax-keyword">static</span> <span class="syntax-keyword">void</span> main(String[] args) {
    Person myPerson = <span class="syntax-keyword">new</span> Person(<span class="syntax-literal">"John"</span>); <span class="syntax-comment">// 새로운 객체를 생성하려면 new 키워드를 사용하자</span>
    System.out.println(myPerson.getName()); <span class="syntax-comment">// John</span>
    System.out.println(Person.getSpecies()); <span class="syntax-comment">// Homo sapiens</span>
  }
}</code></pre>
</li><br>
		</ul>
	</li>
	</ul>
	
</div>
</div>
     </div>
    <footer id="footer" class="footer">
	<%@ include file="../inc/footer.jsp" %>
	</footer>
</body>
</html>