package com.veryvery.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.veryvery.dto.GoodsDTO;
import com.veryvery.dto.PaymentDTO;
import com.veryvery.service.GoodsService;
import com.veryvery.service.PaymentService;

@Controller
@RequestMapping("/payment/*")
public class PaymentController {

	@Autowired
	PaymentService paymentService;
	
	@Autowired
	GoodsService goodsService;
	
	// 결제 목록 불러오기
	@RequestMapping("list.do")
	public String paymentList(@RequestParam String id, Model model) throws Exception {
		List<PaymentDTO> paymentList = paymentService.paymentList(id);
		model.addAttribute("paymentList", paymentList);
		return "payment/paymentList";
	}
	
	// 상품 상세보기
	@RequestMapping(value="read.do", method = RequestMethod.GET)
	public String goodsRead(@RequestParam int gno, Model model) throws Exception {
		GoodsDTO goods = goodsService.goodsRead(gno);
		model.addAttribute("goods", goods);
		return "goods/goodsRead";
	}
	
	// 관리자용 결제 상세보기
	@RequestMapping("adminList.do")
	public String pamentAdminList(Model model) throws Exception {
		List<PaymentDTO> paymentAdminList = paymentService.paymentAdminList();
		model.addAttribute("paymentAdminList", paymentAdminList);
		return "payment/paymentAdminList";
	}
	
	// 결제 정보 불러오기
	@RequestMapping(value="adminRead.do", method = RequestMethod.GET)
	public String paymentAdminRead(@RequestParam int ono, Model model) throws Exception {
		PaymentDTO paymentAdminRead = paymentService.paymentAdminRead(ono);
		model.addAttribute("paymentAdminRead", paymentAdminRead);
		return "payment/paymentAdminRead";
	}
	
	// 결제 처리 
	@RequestMapping(value="insert.do", method = RequestMethod.POST)
	public String paymentWrite(PaymentDTO pdto, Model model) throws Exception {
		paymentService.paymentWrite(pdto);
		return "redirect:list.do";
	}
	/*
	 * // 결제 처리 public void paymentWrite(PaymentDTO pdto) throws Exception;
	 * 
	 * // 배송지 수정 public void paymentUpdate(PaymentDTO pdto) throws Exception;
	 * 
	 * // 택배 배정 public void paymentAdminUpdate(PaymentDTO pdto) throws Exception;
	 * 
	 * //상품 삭제 public void paymentDelete(int ono) throws Exception;
	 */
}
